// npx ts-node scripts/load_pkp_public_keys.ts

import * as redis from "redis";

const redisUrl = "redis://localhost:6379";
const pkpPulicKeysToLoad = [
	"0x0453e72a162121e53696486d990743846a860c4ca753b12673f09e54f23148a3ecbed1e9dff18190d45fa44ff64fefb32dc957eeda530a06efe00575839cea5bff",
	"0x04ca4b4d4980c156c3888e46336f57fd66ac6ccf6975102bcf63cb92cdacd8b1edb674a9f24ab0dd363e34fc2e8a5b282831a0988c0f7deb379073141b7fd02cbd",
	"0x04f04c55b28fbbffbd9ea0eec1471f79170d014b6071d9778e744d6af13adbd2e2bc7241bad822f583a22e7a683d7e3ea70765af8591a549b67eb95701d6f5bf6f",
	"0x0406304e88a305b1bdf47e81ebf3dc20fb42a257acc6f8aa201601bca785d06cf246ce3917232faa83e536d8d33727b50e78dbff342fc8d7c8384332eb2484734f",
	"0x0490befd1ba3d43a0f54f3ace732c244f3a42d346e1fdc916a03abe228e0f0bb0cb08ae8d911bfc2a85a4c87b22f82d93263ad5ae5d3446dc59b893ce1b6b21dde",
	"0x04b3cc2293c2dbea1059b44c99d328effc6e25a0aeaae1370071628c6d84f0f2a76acb72fe249c1a43377daed81820a0a6ad72012bab8f505e3089c263690d2446",
	"0x0426fd4c16e701acf3425904c8b114c479b9952c1bfea6ef8fdc5c814dcd58a478f1c876ccef39eb9d9fcff466db1a876d0e95525a9a699d3d1ffbdee8764d1c50",
	"0x04db559004a5b70b19ad270411c7a129aadcd3d5af907dbeb9c7d5f7e63d362d8117a2960ad52d2f7913ab279b45726ddf385f2a080593c2498b741b546d445fb5",
	"0x04d47e81640e8de135b32f8238c4bee13d989bdcc7ede053c8e19922ef108e6f27beb56a17add921b9e3e880fcd3f126b24daac3b22d2564f5583d87fc527eaa0b",
	"0x0495bcdb03e71117808a73981239a19b101dfc4b27effc469149e3d9dc149ce18ea7d70a6a74a3415aa63c4e923cc84dc4eff5d578bb580fa6a201bca574093bbf",
	"0x040e9c2a9d9b908ca1385690e9b230024ed7293a525fe75d6b2cfbc50a8ae01b1ed4886141a5cecd9d45b65d0e24bce13d0693111d660bb16de657b81fb11956c1",
	"0x04557231899900f437b30c8b5f3ce3c081fc06dca9877b68c699a4aaede24a66b9583d7f0bfc21143b68839e45b12ca4645ece4d240d0e79f8e300507468f52a19",
	"0x047519f020297a1994f06e52d48614800aabb668755f5694c071fc475e81dfb95a4fd25a6cbd038302fe9db6aa8f0590fb7fc4964cf31eaf58eb0b1eae54e2dba3",
	"0x04bb5a1944aa54184d1b4acc86efa567be56051065e1e57c07f5930fc883b7810388ea4248de215aad41db75deceb6eb0eaa9061653aefe9e67faffec6082a1e35",
	"0x0407cce2f9d5b02eb6f5b63a5372c00c0844e35ba6e075f076179c180e7111e1721f57fec8693d99b5a8ed02f28dd35b9ab65c9ead0b38b8b97b3230f640471198",
	"0x047284e304238518e6e9a8a072d9908fdfa9d40c1fd21ea7145df54a5122389d47fa1d279e83f5e3d065ccaabf967a485b8b5066a9d6fee3b6454733478c0193af",
	"0x04eed758b9a14e032786a0cf66bff64b7d95d4728752f214e3ce3e24112304b9d0507789eefeab4194c30ac9a61ef7626aa62cc599d5c72da74e478983e92d8974",
	"0x04364d3972d1a9c5968ca65987a9802167f3573ef2e183f0dda7764bddae5ce922c873ee79aa5969abeeee37c6f52ab62d1d8899d1faa739992e189dfb051820c8",
];

let redisClient: redis.RedisClientType;

(async () => {
	redisClient = redis.createClient({
		url: redisUrl,
	});

	redisClient.on("error", (error: Error) =>
		console.error(`Error : ${error}`),
	);

	await redisClient.connect();
})();

async function run() {
	for (const key of pkpPulicKeysToLoad) {
		// Set the score to 0 so that the PKP is marked as unminted.
		await redisClient.zAdd("pkp_public_keys", {
			score: 0,
			value: key,
		});
	}

	console.info("Done");

	process.exit(0);
}

run();
